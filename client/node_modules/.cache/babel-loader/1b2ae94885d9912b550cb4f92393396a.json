{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgEvents.js\";\nimport React from 'react';\n\nclass OrgEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      org_id: this.props.match.params.org_id,\n      isOrgLeader: true,\n      formShown: false\n    };\n  }\n\n  componentDidMount() {\n    //fetch the events for this org using the id and save them to the state\n    //Also check if the current user is in the org with the given id and their status in the org\n    fetch('http://localhost:4000');\n  }\n\n  showForm() {\n    this.setState({ ...this.state,\n      formShown: !this.state.formShown\n    });\n  }\n\n  render() {\n    let AddEventButton;\n\n    if (this.state.isOrgLeader) {\n      AddEventButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleForm,\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }, this);\n    } else {\n      AddEventButton = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" here is the event data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), AddEventButton]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OrgEvents;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgEvents.js"],"names":["React","OrgEvents","Component","constructor","props","state","org_id","match","params","isOrgLeader","formShown","componentDidMount","fetch","showForm","setState","render","AddEventButton","toggleForm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AAACC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,MAAjC;AAAyCG,MAAAA,WAAW,EAAE,IAAtD;AAA4DC,MAAAA,SAAS,EAAE;AAAvE,KAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AAEf;AACA;AACAC,IAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;;AAEDC,EAAAA,QAAQ,GAAE;AAEN,SAAKC,QAAL,CAAc,EAAC,GAAG,KAAKT,KAAT;AAAgBK,MAAAA,SAAS,EAAG,CAAC,KAAKL,KAAL,CAAWK;AAAxC,KAAd;AACH;;AAGDK,EAAAA,MAAM,GAAE;AAEJ,QAAIC,cAAJ;;AAEI,QAAG,KAAKX,KAAL,CAAWI,WAAd,EAA0B;AACtBO,MAAAA,cAAc,gBAAE;AAAQ,QAAA,OAAO,EAAG,KAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AAEH,KAHD,MAGK;AAEDD,MAAAA,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA,cAAjB;AACH;;AAEL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAvCkC;;AAyCvC,eAAef,SAAf","sourcesContent":["import React from 'react'\n\nclass OrgEvents extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state ={org_id: this.props.match.params.org_id, isOrgLeader: true, formShown: false}\n    }\n\n    componentDidMount(){\n\n        //fetch the events for this org using the id and save them to the state\n        //Also check if the current user is in the org with the given id and their status in the org\n        fetch('http://localhost:4000')\n    }\n\n    showForm(){\n\n        this.setState({...this.state, formShown : !this.state.formShown})\n    }\n\n    \n    render(){\n\n        let AddEventButton\n\n            if(this.state.isOrgLeader){\n                AddEventButton= <button onClick= {this.toggleForm}>Add an Event</button>\n\n            }else{\n\n                AddEventButton = <div></div>\n            }\n\n        return(\n            <div>\n                <p> here is the event data</p>\n                {AddEventButton}\n            </div>\n\n        )\n    }\n}\nexport default OrgEvents"]},"metadata":{},"sourceType":"module"}