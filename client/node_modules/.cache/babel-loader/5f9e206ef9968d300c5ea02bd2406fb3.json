{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/SignUp.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/SignUp.css';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    }; // initial state\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    //TO DO\n    e.preventDefault();\n\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({ ...this.state,\n        error: 'Password and Confirm Password fields must match'\n      });\n    } else {\n      fetch('http://localhost:4000/signupSubmit', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(result => result.json()).then(data => {\n        if (data.error) {\n          this.setState({ ...this.state,\n            error: data.error\n          });\n        } else {\n          this.setState({ ...this.state,\n            success: true\n          });\n        }\n      }); //this.resetForm()\n    }\n  }\n\n  handleChange(e) {\n    //Used when characters are typed into the input field\n    const value = e.target.value;\n    this.setState({ ...this.state,\n      [e.target.name]: value\n    });\n  } //Set form back to initial state\n\n\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    });\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          from: this.props.location\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \" Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: this.state.name,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: this.state.confirmPassword,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"errorMessage\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/SignUp.js"],"names":["React","Redirect","SignUp","Component","constructor","props","state","name","email","password","confirmPassword","error","handleChange","bind","handleSubmit","e","preventDefault","setState","fetch","method","headers","body","JSON","stringify","then","result","json","data","success","value","target","resetForm","render","pathname","from","location"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport './css/SignUp.css'\n\n\nclass SignUp extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = { name: '',email:'', password: '', confirmPassword: '', error:''}  // initial state\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n      }\n\n    handleSubmit(e){\n       //TO DO\n       e.preventDefault()\n       if(this.state.password !== this.state.confirmPassword){\n           this.setState({...this.state, error: 'Password and Confirm Password fields must match'})\n       }else{\n        \n            fetch('http://localhost:4000/signupSubmit', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({name: this.state.name, email: this.state.email , password: this.state.password})\n            })\n            .then(result=> result.json())\n            .then(data => {\n\n                if(data.error){\n                    this.setState({...this.state, error: data.error})\n                }else{\n                    this.setState({...this.state, success: true})\n                }\n        })\n            //this.resetForm()\n       }\n    }\n\n    handleChange(e){\n    //Used when characters are typed into the input field\n        const value = e.target.value;\n        this.setState({\n          ...this.state,\n          [e.target.name]: value\n        });\n    }\n\n    //Set form back to initial state\n    resetForm(){\n        this.setState({ name: '', email:'', password: '', confirmPassword:'',error:''})    \n    }\n\n    render(){\n\n            if(this.state.success){\n                return <Redirect to= {{pathname:'/', from: this.props.location}} />\n             }\n\n        return(\n            <form onSubmit = {this.handleSubmit} method=\"POST\">\n                <div className=\"formcontent\">   \n                \n                    <label htmlFor='name'> Name: </label>\n                    <input type='text' id ='name' name='name' value={this.state.name} onChange= {this.handleChange} required/>\n                \n                    <label htmlFor='email'> Email: </label>\n                    <input type='text' id ='email' name='email' value={this.state.email} onChange= {this.handleChange} required/>\n\n                    <label htmlFor= 'password'>Password: </label>\n                    <input type='password' id ='password' name ='password' value={this.state.password} onChange= {this.handleChange} required/>\n\n                    <label htmlFor= 'confirmPassword'>Confirm Password: </label>\n                    <input type='password' id = 'confirmPassword' name ='confirmPassword' value={this.state.confirmPassword} onChange= {this.handleChange} required/>\n            \n                    <input type= 'submit' value= 'Create Account'/>\n                    <p id= 'errorMessage'>{this.state.error}</p>\n                    \n                </div>\n            </form>\n        )\n    }\n}\nexport default SignUp"]},"metadata":{},"sourceType":"module"}