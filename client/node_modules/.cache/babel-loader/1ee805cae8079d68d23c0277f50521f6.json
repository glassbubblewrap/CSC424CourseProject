{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/ProtectedRoutes.js\";\nimport React, { useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = async ({\n  component,\n  ...rest\n}) => {\n  // const [loggedIn,setloggedIn] = useState(false)\n  // await fetch('http://localhost:4000/checkIfloggedIn', {\n  //     method:'GET',\n  //     origin: 'http:localhost:4000',\n  //     credentials: 'include'\n  //   })\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         if(data.user){\n  //            setloggedIn(true)\n  //         }else{\n  //           setloggedIn(false)\n  //         }\n  //     } )\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (loggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"component\", { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/ProtectedRoutes.js"],"names":["React","useState","Redirect","Route","ProtectedRoute","component","rest","props","loggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAGA,MAAMC,cAAc,GAAG,OAAO;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAP,KAA+B;AAEnD;AAEC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBAEI,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EACnBC,KAAK,IAAG;AACJ,UAAGC,QAAH,EAAY;AACT,4BAAO,0BAAcF,IAAd;AAAA,aAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACF,OAFD,MAGI;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACR;AARD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH,CAjCD;;KAAMH,c;AAkCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nconst ProtectedRoute = async ({component, ...rest}) =>{\n\n   // const [loggedIn,setloggedIn] = useState(false)\n\n    // await fetch('http://localhost:4000/checkIfloggedIn', {\n      \n    //     method:'GET',\n    //     origin: 'http:localhost:4000',\n    //     credentials: 'include'\n      \n    //   })\n    //     .then(res => res.json())\n    //     .then(data => {\n    //         if(data.user){\n    //            setloggedIn(true)\n    //         }else{\n    //           setloggedIn(false)\n    //         }\n    //     } )\n\n    return(\n\n        <Route {...rest} render= {\n            props =>{  \n                if(loggedIn){\n                   return <component{...rest}{...props} />\n                }\n                else{\n                    return <Redirect to='/login'/>\n                }\n        }\n         } />\n    )\n}\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}