{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/UserProfile.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      loggedIn: false,\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/checkIfloggedIn', {\n      method: 'GET',\n      origin: 'http://localhost:4000',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.user) {\n        if (this._isMounted) {\n          this.setState({ ...this.state,\n            loggedIn: true,\n            user: data.user\n          });\n        }\n      } else {\n        if (this._isMounted) {\n          this.setState({ ...this.state,\n            loggedIn: false\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is where a user would see their profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/UserProfile.js"],"names":["React","Redirect","UserProfile","Component","constructor","props","_isMounted","state","loggedIn","user","componentDidMount","fetch","method","origin","credentials","headers","then","res","json","data","setState","componentWillUnmount","render","pathname","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAGrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SADlBC,UACkB,GADL,KACK;AAEd,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAE3CC,MAAAA,MAAM,EAAC,KAFoC;AAG3CC,MAAAA,MAAM,EAAE,uBAHmC;AAI3CC,MAAAA,WAAW,EAAE,SAJ8B;AAK3CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALkC,KAA1C,CAAL,CASCC,IATD,CASMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMG,IAAI,IAAI;AACV,UAAGA,IAAI,CAACV,IAAR,EAAa;AACT,YAAG,KAAKH,UAAR,EAAmB;AACf,eAAKc,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;AAAgBC,YAAAA,QAAQ,EAAE,IAA1B;AAAgCC,YAAAA,IAAI,EAAEU,IAAI,CAACV;AAA3C,WAAd;AACH;AACJ,OAJD,MAIK;AAED,YAAG,KAAKH,UAAR,EAAmB;AACf,eAAKc,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;AAAgBC,YAAAA,QAAQ,EAAE;AAA1B,WAAd;AACH;AACJ;AACJ,KArBD;AAsBH;;AAEDa,EAAAA,oBAAoB,GAAG;AACnB,SAAKf,UAAL,GAAkB,KAAlB;AACH;;AAGDgB,EAAAA,MAAM,GAAE;AAEJ,QAAG,KAAKf,KAAL,CAAWC,QAAX,KAAwB,KAA3B,EAAiC;AAC7B,0BACI,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFe,UAAAA,QAAQ,EAAE,QADR;AAEFhB,UAAAA,KAAK,EAAE;AAAEiB,YAAAA,IAAI,EAAEnB,KAAK,CAACoB;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,MAQK;AAED,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AApDoC;;AAuDzC,eAAevB,WAAf","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router-dom'\n\nclass UserProfile extends React.Component{\n\n    _isMounted = false\n    constructor(props){\n        super(props)\n        this.state = {loggedIn: false, user: ''}\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:4000/checkIfloggedIn', {\n          \n            method:'GET',\n            origin: 'http://localhost:4000',\n            credentials: 'include',\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.user){\n                if(this._isMounted){\n                    this.setState({...this.state, loggedIn: true, user: data.user})\n                }\n            }else{\n            \n                if(this._isMounted){\n                    this.setState({...this.state, loggedIn: false})\n                }    \n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n        \n\n    render(){\n\n        if(this.state.loggedIn === false){\n            return (\n                <Redirect\n                  to={{\n                    pathname: \"/login\",\n                    state: { from: props.location }\n                  }}\n                />)\n        }else{\n        \n            return <h2>This is where a user would see their profile</h2>\n        }\n    }\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}