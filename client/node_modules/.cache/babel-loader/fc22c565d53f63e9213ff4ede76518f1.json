{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/UserOrgs.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport GetUserOrgs from './GetUserOrgs'; //import RenderOrgCards from './RenderOrgCards'\n// Will look similar to BrowseOrgs but only the orgs you have joined will appear\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserOrgs extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      loggedIn: false,\n      user: '',\n      orgs: []\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    fetch('http://localhost:4000/checkIfloggedIn', {\n      method: 'GET',\n      origin: 'http:localhost:4000',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.user) {\n        //console.log('userfound')\n        if (this._isMounted) {\n          this.setState({ ...this.state,\n            loggedIn: true,\n            user: data.user\n          });\n        }\n      } else {\n        //console.log('user not found')\n        if (this._isMounted) {\n          this.setState({\n            loggedIn: false\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(GetUserOrgs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default UserOrgs;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/UserOrgs.js"],"names":["React","Redirect","GetUserOrgs","UserOrgs","Component","constructor","props","_isMounted","state","loggedIn","user","orgs","componentDidMount","fetch","method","origin","credentials","then","res","json","data","setState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AAGA;;;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAIlCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAFlBC,UAEkB,GAFL,KAEK;AAEd,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,IAAI,EAAE,EAAzB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKL,UAAL,GAAkB,IAAlB;AAEAM,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAE3CC,MAAAA,MAAM,EAAC,KAFoC;AAG3CC,MAAAA,MAAM,EAAE,qBAHmC;AAI3CC,MAAAA,WAAW,EAAE;AAJ8B,KAA1C,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAI;AACV,UAAGA,IAAI,CAACV,IAAR,EAAa;AACT;AACA,YAAG,KAAKH,UAAR,EAAmB;AACf,eAAKc,QAAL,CAAc,EAAC,GAAG,KAAKb,KAAT;AAAgBC,YAAAA,QAAQ,EAAE,IAA1B;AAAgCC,YAAAA,IAAI,EAAEU,IAAI,CAACV;AAA3C,WAAd;AACH;AACJ,OALD,MAKK;AAED;AACA,YAAG,KAAKH,UAAR,EAAmB;AAEf,eAAKc,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACH;AACJ;AACJ,KAtBD;AAuBH;;AAEDa,EAAAA,oBAAoB,GAAG;AACnB,SAAKf,UAAL,GAAkB,KAAlB;AACD;;AAGHgB,EAAAA,MAAM,GAAE;AAEJ,QAAG,KAAKf,KAAL,CAAWC,QAAX,KAAwB,KAA3B,EAAiC;AAC7B;AAAA,cAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAGH,KAJD,MAIK;AACD,0BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA;AAGH;AAIJ;;AAxDiC;;AA2DtC,eAAeN,QAAf","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router'\nimport GetUserOrgs from './GetUserOrgs'\n//import RenderOrgCards from './RenderOrgCards'\n\n\n// Will look similar to BrowseOrgs but only the orgs you have joined will appear\nclass UserOrgs extends React.Component{\n\n    _isMounted = false\n\n    constructor(props){\n        super(props)\n        this.state = { loggedIn: false, user: '', orgs: []}\n    }\n    \n    componentDidMount(){\n        this._isMounted = true\n\n        fetch('http://localhost:4000/checkIfloggedIn', {\n    \n            method:'GET',\n            origin: 'http:localhost:4000',\n            credentials: 'include'\n            \n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.user){\n                //console.log('userfound')\n                if(this._isMounted){\n                    this.setState({...this.state, loggedIn: true, user: data.user})\n                }\n            }else{\n            \n                //console.log('user not found')\n                if(this._isMounted){\n            \n                    this.setState({loggedIn: false})\n                }\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n    \n    \n    render(){\n\n        if(this.state.loggedIn === false){\n            <Redirect to='/login'/>\n                \n            \n        }else{\n            return(\n            <GetUserOrgs/>\n            )\n        }\n\n       \n\n    }\n}\n\nexport default UserOrgs"]},"metadata":{},"sourceType":"module"}