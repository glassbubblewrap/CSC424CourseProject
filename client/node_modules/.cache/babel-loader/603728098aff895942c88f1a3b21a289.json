{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalyn\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSC424CourseProject\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../App.css'; //import {Link} from 'react-router-dom'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      success: ''\n    }; // initial state\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/loginSubmit', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(result => result.json()).then(data => {\n      if (data.error) {\n        this.setState({ ...this.state,\n          error: data.error\n        });\n      } else {\n        this.setState({ ...this.state,\n          success: true\n        });\n      }\n    }); // Process Data on server\n\n    this.resetForm();\n  }\n\n  handleChange(e) {\n    //Used when characters are typed into the input field\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  } //Set form back to initial state\n\n\n  resetForm() {\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: this.props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"errorMessage\",\n          children: [this.state.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/kalyn/OneDrive/Documents/GitHub/CSC424CourseProject/client/src/components/Login.js"],"names":["React","Redirect","Login","Component","constructor","props","state","email","password","error","success","handleChange","bind","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","result","json","data","setState","resetForm","target","name","value","render","pathname","from","location"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '../App.css'\r\n\r\n//import {Link} from 'react-router-dom'\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { email: '', password: '', error: '', success: ''}   // initial state\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n      }\r\n\r\n    handleSubmit(e){\r\n\r\n        e.preventDefault()\r\n        fetch('http://localhost:4000/loginSubmit', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: this.state.email, password: this.state.password})\r\n        })\r\n        .then(result=> result.json())\r\n        .then(data => {\r\n\r\n    \r\n            if(data.error){\r\n                this.setState({...this.state, error: data.error})\r\n            }\r\n            else{\r\n\r\n                this.setState({...this.state, success: true})\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n        // Process Data on server\r\n        this.resetForm()\r\n    }\r\n\r\n    handleChange(e){\r\n    //Used when characters are typed into the input field\r\n        this.setState({\r\n          ...this.state,\r\n          [e.target.name]:  e.target.value\r\n        });\r\n    }\r\n\r\n    //Set form back to initial state\r\n    resetForm(){\r\n        this.setState({ email: '', password: ''})    \r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.success){\r\n\r\n            return <Redirect to= {{pathname:'/', state: {from: this.props.location}}} />\r\n         }\r\n\r\n    return(\r\n        <form onSubmit = {this.handleSubmit} method=\"POST\">\r\n                <div className=\"formcontent\">  \r\n\r\n                    <div className=\"form-group\">             \r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" value={this.state.email} onChange= {this.handleChange} required/> \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor= \"password\">Password: </label>\r\n                        <input className=\"form-control\" type=\"password\" name =\"password\" id= \"password\" value={this.state.password} onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <input className=\"btn btn-primary\" type= \"submit\" value= \"Login\"/>\r\n                    \r\n                    <p id='errorMessage'>{this.state.error} </p>\r\n                \r\n                </div>  \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}