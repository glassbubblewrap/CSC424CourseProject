{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalyn\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSC424CourseProject\\\\client\\\\src\\\\components\\\\OrgEvents.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OrgEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      org_id: this.props.org_id,\n      showForm: false\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {//fetch the events for this org using the id and save them to the state\n    //Also check if the current user is in the org with the given id and their status in the org\n    //fetch('http://localhost:4000')\n  }\n\n  toggleForm() {\n    this.setState({ ...this.state,\n      showForm: !this.state.showForm\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/onEventSubmit', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.org_id,\n        name: this.state.name,\n        location: this.state.location,\n        date: this.state.date,\n        time: this.state.time,\n        description: this.state.description\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        this.setState({ ...this.state,\n          error: data.error\n        });\n      } else if (data.success) {\n        this.setState({ ...this.state,\n          success: data.success\n        });\n      }\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    let AddEventButton;\n    AddEventButton = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.toggleForm,\n      children: \"Add an Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this);\n    let EventForm;\n\n    if (this.state.showForm) {\n      EventForm = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventName\",\n          children: \" Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          id: \"eventName\",\n          name: \"name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDate\",\n          children: \" Event Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"Date\",\n          id: \"eventDate\",\n          name: \"date\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDate\",\n          children: \" Event Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          id: \"eventTime\",\n          name: \"time\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventLocation\",\n          children: \"Location \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          id: \"eventLocation\",\n          name: \"location\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDescription\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          id: \"eventDescription\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    } else {\n      EventForm = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), AddEventButton, EventForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OrgEvents;","map":{"version":3,"sources":["C:/Users/kalyn/OneDrive/Documents/GitHub/CSC424CourseProject/client/src/components/OrgEvents.js"],"names":["React","OrgEvents","Component","constructor","props","state","org_id","showForm","toggleForm","bind","submitForm","handleChange","componentDidMount","setState","e","preventDefault","fetch","method","headers","body","JSON","stringify","id","name","location","date","time","description","then","res","json","data","error","success","target","value","render","AddEventButton","EventForm"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nclass OrgEvents extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={org_id: this.props.org_id, showForm: false}\r\n        this.toggleForm = this.toggleForm.bind(this)\r\n        this.submitForm = this.submitForm.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        //fetch the events for this org using the id and save them to the state\r\n        //Also check if the current user is in the org with the given id and their status in the org\r\n        //fetch('http://localhost:4000')\r\n    }\r\n\r\n    toggleForm(){\r\n\r\n        this.setState({...this.state, showForm : !this.state.showForm})\r\n    }\r\n\r\n    submitForm(e){\r\n        e.preventDefault()\r\n        fetch('http://localhost:4000/onEventSubmit', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.org_id, \r\n                name: this.state.name, \r\n                location: this.state.location,\r\n                date: this.state.date,\r\n                time: this.state.time,\r\n                description: this.state.description\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                this.setState({...this.state, error: data.error})\r\n            }\r\n            else if(data.success){\r\n                this.setState({...this.state, success: data.success})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        let AddEventButton\r\n\r\n            AddEventButton = <button onClick= {this.toggleForm}>Add an Event</button>\r\n\r\n            let EventForm\r\n            if(this.state.showForm){\r\n\r\n                EventForm = (\r\n                <form onSubmit = {this.submitForm}>\r\n\r\n                    <label htmlFor= 'eventName'> Event Name</label>\r\n                    <input onChange={this.handleChange} type= 'text' id= 'eventName' name= 'name' required/>\r\n\r\n                    <label htmlFor= 'eventDate'> Event Date</label>\r\n                    <input onChange={this.handleChange} type= 'Date' id= 'eventDate' name= 'date' required/>\r\n\r\n                    <label htmlFor= 'eventDate'> Event Time</label>\r\n                    <input onChange={this.handleChange} type= 'text' id= 'eventTime' name= 'time' required/>\r\n\r\n                    <label htmlFor= 'eventLocation'>Location </label>\r\n                    <input onChange={this.handleChange} type= 'text' id= 'eventLocation' name= 'location' required/>\r\n\r\n                    <label htmlFor= 'eventDescription'>Description</label>\r\n                    <input onChange={this.handleChange} type='text' id='eventDescription' name='description' />\r\n\r\n                    <input type= 'submit' value = 'Add Event' />\r\n\r\n                    <p>{this.state.error}</p>\r\n                    <p>{this.state.success}</p>\r\n\r\n                </form>\r\n                )\r\n            }else{\r\n\r\n                EventForm = <div></div>\r\n            }\r\n\r\n        return(\r\n            <div>\r\n                <p> Events</p>\r\n                {AddEventButton}\r\n                {EventForm}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default OrgEvents"]},"metadata":{},"sourceType":"module"}