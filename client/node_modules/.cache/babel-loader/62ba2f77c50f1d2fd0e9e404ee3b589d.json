{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalyn\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSC424CourseProject\\\\client\\\\src\\\\components\\\\UserOrgs.js\";\nimport React from 'react';\nimport RenderOrgCards from './RenderOrgCards'; // Will look similar to BrowseOrgs but only the orgs you have joined will appear\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserOrgs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgs: []\n    };\n  } // componentDidMount(){\n  //     //get the orgId, name and location from the database and save them in an arra\n  //     fetch('http://localhost:40000/getUserOrgs',{method: 'GET'})\n  //     .then(res=> res.json)\n  //     .then(data => this.setState({...this.state, orgs : JSON.parse(data)} ))\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here is where organization that you have joined will appear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This page will function similarly to the Browse Organizations page but will only find the organizations that the user has joined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RenderOrgCards, {\n        orgs: this.state.orgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UserOrgs;","map":{"version":3,"sources":["C:/Users/kalyn/OneDrive/Documents/GitHub/CSC424CourseProject/client/src/components/UserOrgs.js"],"names":["React","RenderOrgCards","UserOrgs","Component","constructor","props","state","orgs","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;;AACA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACH,GALiC,CAOlC;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAE;AACJ,wBAEA;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAG,KAAKF,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAWH;;AAzBiC;;AA4BtC,eAAeL,QAAf","sourcesContent":["import React from 'react'\r\nimport RenderOrgCards from './RenderOrgCards'\r\n\r\n// Will look similar to BrowseOrgs but only the orgs you have joined will appear\r\nclass UserOrgs extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {orgs: []}\r\n    }\r\n    \r\n    // componentDidMount(){\r\n    //     //get the orgId, name and location from the database and save them in an arra\r\n    //     fetch('http://localhost:40000/getUserOrgs',{method: 'GET'})\r\n    //     .then(res=> res.json)\r\n    //     .then(data => this.setState({...this.state, orgs : JSON.parse(data)} ))\r\n    \r\n    render(){\r\n        return(\r\n\r\n        <div>\r\n        <h2>Here is where organization that you have joined will appear</h2>\r\n        <p>This page will function similarly to the Browse Organizations page but will only find the organizations that the user has joined</p>\r\n        <RenderOrgCards orgs= {this.state.orgs}/>\r\n        </div>\r\n        )\r\n\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport default UserOrgs"]},"metadata":{},"sourceType":"module"}