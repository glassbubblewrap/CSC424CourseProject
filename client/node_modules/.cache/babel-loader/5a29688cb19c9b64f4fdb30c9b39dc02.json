{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; //import './App.css'\n\nimport MainNavBar from './components/MainNavBar';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport HomePage from './components/HomePage';\nimport UserOrgs from './components/UserOrgs';\nimport BrowseOrgs from './components/BrowseOrgs';\nimport UserProfile from './components/UserProfile';\nimport RegisterOrg from './components/RegisterOrg';\nimport OrgPageElements from './components/OrgPageElements';\nimport ProtectedRoute from './components/ProtectedRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      user: ''\n    };\n    this.getData = this.getData.bind(this);\n  } // fetch session info to conditionally render navlinks based on if user is logged in\n\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    fetch('http://localhost:4000/checkIfloggedIn', {\n      method: 'GET',\n      origin: 'http:localhost:4000',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.user) {\n        this.setState({ ...this.state,\n          loggedIn: data.loggedIn,\n          user: data.user\n        });\n      } else {\n        this.setState({ ...this.state,\n          loggedIn: data.loggedIn\n        });\n      }\n    });\n  } //    // I would like to render profile  and register org if a user is logged in and Login and signup if not\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"ORGanizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MainNavBar, {\n            loggedIn: this.state.loggedIn,\n            userId: this.state.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: HomePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              exact: true,\n              path: \"/orgs\",\n              component: UserOrgs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/browse\",\n              component: BrowseOrgs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              exact: true,\n              path: \"/registerOrg\",\n              component: RegisterOrg,\n              user: this.state.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              exact: true,\n              path: \"/profile\",\n              component: UserProfile,\n              user: this.state.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              component: Login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              component: SignUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/organization/:org_id\",\n              component: OrgPageElements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","MainNavBar","Login","SignUp","HomePage","UserOrgs","BrowseOrgs","UserProfile","RegisterOrg","OrgPageElements","ProtectedRoute","App","Component","constructor","props","state","loggedIn","user","getData","bind","componentDidMount","fetch","method","origin","credentials","then","res","json","data","setState","render","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router , Switch, Route } from 'react-router-dom';\n//import './App.css'\nimport MainNavBar from './components/MainNavBar'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport HomePage from './components/HomePage'\nimport UserOrgs from './components/UserOrgs'\nimport BrowseOrgs from './components/BrowseOrgs'\nimport UserProfile from './components/UserProfile'\nimport RegisterOrg from './components/RegisterOrg'\nimport OrgPageElements from './components/OrgPageElements'\nimport ProtectedRoute from './components/ProtectedRoutes';\n\nclass App extends React.Component {\n\n    constructor(props){\n      super(props)\n      this.state = {loggedIn: false, user: ''}\n      this.getData = this.getData.bind(this)\n    }\n\n// fetch session info to conditionally render navlinks based on if user is logged in\n  componentDidMount(){\n    this.getData()\n  }\n\n  getData(){\n    fetch('http://localhost:4000/checkIfloggedIn', {\n      \n    method:'GET',\n    origin: 'http:localhost:4000',\n    credentials: 'include'\n  \n  })\n    .then(res => res.json())\n    .then(data => {\n        if(data.user){\n            this.setState({...this.state, loggedIn: data.loggedIn, user: data.user})\n        }else{\n          this.setState({...this.state, loggedIn: data.loggedIn})\n        }\n    } )\n}\n//    // I would like to render profile  and register org if a user is logged in and Login and signup if not\n\n  render(){\n  return (\n    <div>\n      <title>ORGanizer</title>\n      <Router>\n        <div>\n        <MainNavBar loggedIn= {this.state.loggedIn} userId= {this.state.userId} />\n        <Switch>\n          <Route path= '/' exact component= {HomePage} /> \n          <ProtectedRoute exact path= '/orgs' component= {UserOrgs} />\n          <Route path= '/browse' component= {BrowseOrgs} />\n          <ProtectedRoute exact path = '/registerOrg' component = {RegisterOrg} user= {this.state.user} />  \n          <ProtectedRoute exact path= '/profile' component= {UserProfile} user= {this.state.user}/>\n          <Route path= '/login' component= {Login} />\n          <Route path= '/signup' component= {SignUp} /> \n          <Route path= '/organization/:org_id' component= {OrgPageElements}/>\n        </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}