{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgEvents.js\";\nimport React from 'react';\nimport '../App.css';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OrgEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      org_id: this.props.org_id,\n      events: this.props.events,\n      isOrgLeader: true,\n      showForm: false,\n      name: '',\n      address: '',\n      date: '',\n      time: '',\n      description: ''\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({ ...this.state,\n      showForm: !this.state.showForm\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/onEventSubmit', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.org_id,\n        name: this.state.name,\n        location: this.state.location,\n        date: this.state.date,\n        time: this.state.time,\n        description: this.state.description\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        this.setState({ ...this.state,\n          error: data.error\n        });\n      } else if (data.success) {\n        this.setState({ ...this.state,\n          success: data.success\n        });\n      }\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    let AddEventButton;\n\n    if (this.state.isOrgLeader) {\n      AddEventButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleform,\n        children: \"Add an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }, this);\n    } else {\n      AddEventButton = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }, this);\n    }\n\n    let EventForm;\n\n    if (this.state.showForm) {\n      EventForm = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitForm,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventName\",\n              children: \" Event Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"eventName\",\n              name: \"name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventDate\",\n              children: \" Event Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              type: \"Date\",\n              id: \"eventDate\",\n              name: \"date\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventDate\",\n              children: \" Event Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"eventTime\",\n              name: \"time\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventLocation\",\n              children: \"Location \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"eventLocation\",\n              name: \"location\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventDescription\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"eventDescription\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            value: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    } else {\n      EventForm = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), this.state.events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Event, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, event.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)), AddEventButton, EventForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OrgEvents;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgEvents.js"],"names":["React","Event","OrgEvents","Component","constructor","props","state","org_id","events","isOrgLeader","showForm","name","address","date","time","description","toggleForm","bind","submitForm","handleChange","setState","e","preventDefault","fetch","method","headers","body","JSON","stringify","id","location","then","res","json","data","error","success","target","value","render","AddEventButton","toggleform","EventForm","map","event"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../App.css'\nimport Event from './Event'\n\nclass OrgEvents extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state ={org_id: this.props.org_id, events: this.props.events, isOrgLeader: true, showForm: false, name: '', address: '', date: '', time: '', description: ''}\n        this.toggleForm = this.toggleForm.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    toggleForm(){\n\n        this.setState({...this.state, showForm : !this.state.showForm})\n    }\n\n    submitForm(e){\n        e.preventDefault()\n        fetch('http://localhost:4000/onEventSubmit', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.org_id, \n                name: this.state.name, \n                location: this.state.location,\n                date: this.state.date,\n                time: this.state.time,\n                description: this.state.description\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.error){\n                this.setState({...this.state, error: data.error})\n            }\n            else if(data.success){\n                this.setState({...this.state, success: data.success})\n            }\n        })\n    }\n\n    handleChange(e){\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    \n    render(){\n\n        let AddEventButton\n        \n        if (this.state.isOrgLeader){\n            AddEventButton = <button onClick= {this.toggleform}>Add an Event</button>\n        }\n        else{\n            AddEventButton = <div></div>\n        }\n\n            let EventForm\n            if(this.state.showForm){\n\n                EventForm = (\n                <form onSubmit = {this.submitForm}>\n                    <div className=\"formcontent\">\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'eventName'> Event Name</label>\n                            <input className=\"form-control\" onChange={this.handleChange} type= 'text' id= 'eventName' name= 'name' required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'eventDate'> Event Date</label>\n                            <input className=\"form-control\" onChange={this.handleChange} type= 'Date' id= 'eventDate' name= 'date' required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'eventDate'> Event Time</label>\n                            <input className=\"form-control\" onChange={this.handleChange} type= 'text' id= 'eventTime' name= 'time' required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'eventLocation'>Location </label>\n                            <input className=\"form-control\" onChange={this.handleChange} type= 'text' id= 'eventLocation' name= 'location' required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'eventDescription'>Description</label>\n                            <input className=\"form-control\" onChange={this.handleChange} type='text' id='eventDescription' name='description' />\n                        </div>\n\n                        <input className=\"btn btn-primary\" type= 'submit' value = 'Add Event' />\n\n                        <p>{this.state.error}</p>\n                        <p>{this.state.success}</p>\n\n                    </div>\n\n                </form>\n                )\n            }else{\n\n                EventForm = <div></div>\n            }\n\n        return(\n            <div>\n                <h1> Events</h1>\n\n                {this.state.events.map((event) => (\n\n                    <div key= {event.name}>\n                    <Event event={event}/>\n                    </div>\n                ))}\n\n                {AddEventButton}\n                {EventForm}\n\n            </div>\n\n        )\n    }\n}\nexport default OrgEvents"]},"metadata":{},"sourceType":"module"}