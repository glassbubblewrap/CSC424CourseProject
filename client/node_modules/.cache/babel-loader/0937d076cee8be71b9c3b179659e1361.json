{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/RenderOrgCards.js\";\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport OrgCard from './OrgCard';\n\nclass RenderOrgCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgs: [{\n        id: 12345,\n        name: 'MyOrg',\n        location: 'Hattiesburg Ms.'\n      }, {\n        id: 448894465,\n        name: 'TheBestOrg',\n        location: 'Mobile Al'\n      }]\n    };\n  } //Must get the org_id, name and location from the database\n  // componentDidMount(){\n  //     //get the orgId, name and location from the database and save them in an arra\n  //     fetch('http://localhost:40000/getOrgCard',{method: 'GET'})\n  //     .then(res=> res.json)\n  //     .then(data => this.setState({...this.state, orgs : JSON.parse(data)} ))\n  // }\n  // render a search bar\n  //render an OrgCard component for each of the Organizations returned\n  // from the server\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.orgs.map(org => {\n        /*#__PURE__*/\n        _jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(OrgCard, {\n              id: org.id,\n              name: org.name,\n              location: org.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default RenderOrgCards;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/RenderOrgCards.js"],"names":["React","BrowserRouter","Router","OrgCard","RenderOrgCards","Component","constructor","props","state","orgs","id","name","location","render","map","org"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAIA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA4C;AAGxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,KAAL;AAAYC,QAAAA,IAAI,EAAE,OAAlB;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OAAD,EAAyD;AAACF,QAAAA,EAAE,EAAC,SAAJ;AAAeC,QAAAA,IAAI,EAAE,YAArB;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C,OAAzD;AAAP,KAAb;AACH,GANuC,CAQxC;AAEA;AACA;AACA;AACA;AACA;AAEA;AAED;AACA;AACA;;;AAECC,EAAAA,MAAM,GAAE;AAGJ,wBAAQ;AAAA,gBACH,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoBC,GAAG,IAAI;AAExB;AAAA,gBAAC,MAAD;AAAA,iCACI;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,EAAE,EAAGA,GAAG,CAACL,EAAlB;AAAsB,cAAA,IAAI,EAAGK,GAAG,CAACJ,IAAjC;AAAuC,cAAA,QAAQ,EAAGI,GAAG,CAACH;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAOH,OATA;AADG;AAAA;AAAA;AAAA;AAAA,YAAR;AAcH;;AAvCuC;;AA0C5C,eAAeR,cAAf","sourcesContent":["import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport OrgCard from './OrgCard'\n\n\n\nclass RenderOrgCards extends React.Component{\n\n\n    constructor(props){\n        super(props)\n        this.state = {orgs: [{id: 12345, name: 'MyOrg', location: 'Hattiesburg Ms.'},{id:448894465, name: 'TheBestOrg', location: 'Mobile Al'}]}\n    }\n\n    //Must get the org_id, name and location from the database\n\n    // componentDidMount(){\n    //     //get the orgId, name and location from the database and save them in an arra\n    //     fetch('http://localhost:40000/getOrgCard',{method: 'GET'})\n    //     .then(res=> res.json)\n    //     .then(data => this.setState({...this.state, orgs : JSON.parse(data)} ))\n\n    // }\n    \n   // render a search bar\n   //render an OrgCard component for each of the Organizations returned\n   // from the server\n\n    render(){\n\n    \n        return( <div>\n            {this.state.orgs.map(org => {\n\n                <Router>\n                    <div>\n                        <OrgCard id= {org.id} name= {org.name} location= {org.location} />\n                    </div>\n                </Router> \n              \n\n            })}\n        \n        </div>\n        )\n    } \n}\n\nexport default RenderOrgCards"]},"metadata":{},"sourceType":"module"}