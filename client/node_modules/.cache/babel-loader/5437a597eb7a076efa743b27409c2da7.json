{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalyn\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSC424CourseProject\\\\client\\\\src\\\\components\\\\SignUp.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/SignUp.css';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    }; // initial state\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    //TO DO\n    e.preventDefault();\n\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({ ...this.state,\n        error: 'Password and Confirm Password fields must match'\n      });\n    } else {\n      fetch('http://localhost:4000/signupSubmit', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(result => result.json()).then(data => {\n        if (data.error) {\n          this.setState({ ...this.state,\n            error: data.error\n          });\n        } else {\n          this.setState({ ...this.state,\n            success: true\n          });\n        }\n      }); //this.resetForm()\n    }\n  }\n\n  handleChange(e) {\n    //Used when characters are typed into the input field\n    const value = e.target.value;\n    this.setState({ ...this.state,\n      [e.target.name]: value\n    });\n  } //Set form back to initial state\n\n\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    });\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          from: this.props.location\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: this.state.confirmPassword,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"errorMessage\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/kalyn/OneDrive/Documents/GitHub/CSC424CourseProject/client/src/components/SignUp.js"],"names":["React","Redirect","SignUp","Component","constructor","props","state","name","email","password","confirmPassword","error","handleChange","bind","handleSubmit","e","preventDefault","setState","fetch","method","headers","body","JSON","stringify","then","result","json","data","success","value","target","resetForm","render","pathname","from","location"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './css/SignUp.css'\r\nimport '../App.css'\r\n\r\n\r\nclass SignUp extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { name: '',email:'', password: '', confirmPassword: '', error:''}  // initial state\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n      }\r\n\r\n    handleSubmit(e){\r\n       //TO DO\r\n       e.preventDefault()\r\n       if(this.state.password !== this.state.confirmPassword){\r\n           this.setState({...this.state, error: 'Password and Confirm Password fields must match'})\r\n       }else{\r\n        \r\n            fetch('http://localhost:4000/signupSubmit', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({name: this.state.name, email: this.state.email , password: this.state.password})\r\n            })\r\n            .then(result=> result.json())\r\n            .then(data => {\r\n\r\n                if(data.error){\r\n                    this.setState({...this.state, error: data.error})\r\n                }else{\r\n                    this.setState({...this.state, success: true})\r\n                }\r\n        })\r\n            //this.resetForm()\r\n       }\r\n    }\r\n\r\n    handleChange(e){\r\n    //Used when characters are typed into the input field\r\n        const value = e.target.value;\r\n        this.setState({\r\n          ...this.state,\r\n          [e.target.name]: value\r\n        });\r\n    }\r\n\r\n    //Set form back to initial state\r\n    resetForm(){\r\n        this.setState({ name: '', email:'', password: '', confirmPassword:'',error:''})    \r\n    }\r\n\r\n    render(){\r\n\r\n            if(this.state.success){\r\n                return <Redirect to= {{pathname:'/', from: this.props.location}} />\r\n             }\r\n\r\n        return(\r\n            <form onSubmit = {this.handleSubmit} method=\"POST\">\r\n                <div className=\"formcontent\">   \r\n                \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor='name'> Name: </label>\r\n                        <input className=\"form-control\" type='text' id ='name' name='name' value={this.state.name} onChange= {this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor='email'> Email: </label>\r\n                        <input className=\"form-control\" type='text' id ='email' name='email' value={this.state.email} onChange= {this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor= 'password'>Password: </label>\r\n                        <input className=\"form-control\" type='password' id ='password' name ='password' value={this.state.password} onChange= {this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor= 'confirmPassword'>Confirm Password: </label>\r\n                        <input className=\"form-control\" type='password' id = 'confirmPassword' name ='confirmPassword' value={this.state.confirmPassword} onChange= {this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <input className=\"btn btn-primary\" type= 'submit' value= 'Create Account'/>\r\n                    <p id= 'errorMessage'>{this.state.error}</p>\r\n                    \r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default SignUp"]},"metadata":{},"sourceType":"module"}