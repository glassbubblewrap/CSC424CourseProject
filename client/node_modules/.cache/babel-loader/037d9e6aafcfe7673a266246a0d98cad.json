{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgAnnouncements.js\";\nimport React from 'react';\nimport Annoucement from './Announcement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OrgAnnouncements extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      org_id: this.props.org_id,\n      announcements: this.props.announcements,\n      isOrgLeader: true,\n      formShown: false,\n      title: '',\n      content: '',\n      error: ''\n    };\n    this.toggleform = this.toggleform.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  toggleform() {\n    this.setState({ ...this.state,\n      formShown: !this.state.formShown\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/onAnnouncementSubmit', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.org_id,\n        title: this.state.title,\n        content: this.state.content\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        this.setState({ ...this.state,\n          error: data.error\n        });\n      } else if (data.success) {\n        let newAnnouncements = this.state.announcements.concat({\n          title: this.state.title,\n          content: this.state.content\n        });\n        this.setState({ ...this.state,\n          announcements: newAnnouncements,\n          success: data.success\n        });\n      }\n    });\n  }\n\n  handleChange(e) {\n    //Used when characters are typed into the input field\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    let AddAnnouncementButton;\n    console.log(this.state.announcements);\n\n    if (this.state.isOrgLeader) {\n      AddAnnouncementButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleform,\n        children: \"Add Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }, this);\n    } else {\n      AddAnnouncementButton = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }, this);\n    }\n\n    let addAnnouncementForm;\n\n    if (this.state.formShown) {\n      addAnnouncementForm = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitForm,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \" Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              value: this.state.title,\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"content\",\n              children: \" Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: this.handleChange,\n              value: this.state.content,\n              type: \"text\",\n              id: \"content\",\n              name: \"content\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else {\n      addAnnouncementForm = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Orgs announcements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), this.state.announcements.map(announcement => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Annoucement, {\n          announcement: announcement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, announcement.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)), AddAnnouncementButton, addAnnouncementForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default OrgAnnouncements;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/OrgAnnouncements.js"],"names":["React","Annoucement","OrgAnnouncements","Component","constructor","props","state","org_id","announcements","isOrgLeader","formShown","title","content","error","toggleform","bind","submitForm","handleChange","setState","e","preventDefault","fetch","method","headers","body","JSON","stringify","id","then","res","json","data","success","newAnnouncements","concat","target","name","value","render","AddAnnouncementButton","console","log","addAnnouncementForm","map","announcement"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Annoucement from './Announcement'\n\nclass OrgAnnouncements extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state ={org_id: this.props.org_id, announcements: this.props.announcements, isOrgLeader: true, formShown: false, title: '', content: '', error:''}\n        this.toggleform = this.toggleform.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    toggleform(){\n\n        this.setState({...this.state, formShown: !this.state.formShown})\n\n    }\n\n    submitForm(e){\n        e.preventDefault()\n        fetch('http://localhost:4000/onAnnouncementSubmit', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({id: this.state.org_id, title: this.state.title, content: this.state.content})\n        })\n        .then(res => res.json())\n        .then(data => {\n            if(data.error){\n                this.setState({...this.state,error: data.error})\n            }else if(data.success){\n                let newAnnouncements = this.state.announcements.concat({title: this.state.title, content: this.state.content})\n                this.setState({...this.state, announcements: newAnnouncements, success: data.success})\n            }\n        })\n\n\n    }\n\n    handleChange(e){\n        //Used when characters are typed into the input field\n            this.setState({\n              ...this.state,\n              [e.target.name]:  e.target.value\n            });\n        }\n\n    render(){\n\n        let AddAnnouncementButton\n        console.log(this.state.announcements)\n        if (this.state.isOrgLeader){\n            AddAnnouncementButton = <button onClick= {this.toggleform}>Add Announcement</button>\n        }\n        else{\n            AddAnnouncementButton = <div></div>\n        }\n\n        let addAnnouncementForm\n        if (this.state.formShown){\n            addAnnouncementForm = (\n                <form onSubmit = {this.submitForm}>\n                    <div className=\"formcontent\">\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'title'> Title</label>\n                            <input className=\"form-control\" onChange={this.handleChange} value={this.state.title} type= 'text' id= 'title' name= 'title' required/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor= 'content'> Content</label>\n                            <input className=\"form-control\" onChange={this.handleChange} value= {this.state.content} type= 'text' id= 'content' name= 'content' required/>\n                        </div>\n\n                        <input className=\"btn btn-primary\" type= 'submit' value = 'Submit' />\n\n                        <p>{this.state.error}</p>\n                        <p>{this.state.success}</p>\n\n                        </div>\n                </form>\n            )\n        }\n        else{\n            addAnnouncementForm = <div></div>\n        }\n\n    return(\n        <div>\n            \n            <h1>Your Orgs announcements</h1>\n\n            {this.state.announcements.map((announcement) => (\n\n                <div key= {announcement.title}>\n                    <Annoucement announcement={announcement}/>\n                </div>\n\n))}\n            {AddAnnouncementButton}\n            {addAnnouncementForm}\n        </div>\n\n    )\n    }\n\n\n\n\n\n}\nexport default OrgAnnouncements"]},"metadata":{},"sourceType":"module"}