{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/Login.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom'; //import {Link} from 'react-router-dom'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    }; // initial state\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch('http://localhost:4000/loginSubmit', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(result => result.json()).then(data => {\n      console.log(data.headers);\n\n      if (data.error) {\n        this.setState({ ...this.state,\n          error: data.error\n        });\n      } else {\n        this.setState({ ...this.state,\n          success: true\n        });\n      }\n    }); // Process Data on server\n\n    this.resetForm();\n  }\n\n  handleChange(e) {\n    //Used when characters are typed into the input field\n    this.setState({ ...this.state,\n      [e.target.name]: e.target.value\n    });\n  } //Set form back to initial state\n\n\n  resetForm() {\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    if (this.state.success) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: this.props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"errorMessage\",\n          children: [this.state.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/Login.js"],"names":["React","Redirect","Login","Component","constructor","props","state","email","password","error","handleChange","bind","handleSubmit","e","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","then","result","json","data","console","log","setState","success","resetForm","target","name","value","render","pathname","from","location"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\n//import {Link} from 'react-router-dom'\n\nclass Login extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = { email: '', password: '', error: ''}   // initial state\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n      }\n\n    handleSubmit(e){\n\n        e.preventDefault()\n        fetch('http://localhost:4000/loginSubmit', {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({email: this.state.email, password: this.state.password})\n        })\n        .then(result=> result.json())\n        .then(data => {\n\n            console.log(data.headers)\n            if(data.error){\n                this.setState({...this.state, error: data.error})\n            }\n            else{\n\n                this.setState({...this.state, success: true})\n            }\n        })\n\n\n\n\n        // Process Data on server\n        this.resetForm()\n    }\n\n    handleChange(e){\n    //Used when characters are typed into the input field\n        this.setState({\n          ...this.state,\n          [e.target.name]:  e.target.value\n        });\n    }\n\n    //Set form back to initial state\n    resetForm(){\n        this.setState({ email: '', password: ''})    \n    }\n\n    render(){\n\n        if(this.state.success){\n\n            return <Redirect to= {{pathname:'/', state: {from: this.props.location}}} />\n         }\n\n    return(\n        <form onSubmit = {this.handleSubmit} method=\"POST\">\n                <div className=\"formcontent\">               \n                    <label htmlFor=\"email\">Email: </label>\n                    <input type=\"text\" name=\"email\" id=\"email\" value={this.state.email} onChange= {this.handleChange} required/> \n\n                    <label htmlFor= \"password\">Password: </label>\n                    <input type=\"password\" name =\"password\" id= \"password\" value={this.state.password} onChange={this.handleChange} required/>\n\n                    <input type= \"submit\" value= \"Login\"/>\n                    \n                    <p id='errorMessage'>{this.state.error} </p>\n                \n                </div>  \n            </form>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}