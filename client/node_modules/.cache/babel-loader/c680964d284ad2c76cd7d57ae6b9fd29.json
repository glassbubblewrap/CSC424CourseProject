{"ast":null,"code":"var _jsxFileName = \"/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [loggedIn, setloggedIn] = useState(false);\n  fetch('http://localhost:4000/checkIfloggedIn', {\n    method: 'GET',\n    origin: 'http:localhost:4000',\n    credentials: 'include'\n  }).then(res => res.json()).then(data => {\n    if (data.user) {\n      setloggedIn(true);\n      setUser(data.user);\n    } else {\n      setloggedIn(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (loggedIn) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 27\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"FzAz9/cHR87K9Zjx3r59/yxLlvU=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/brady/CSC424/CourseProject/CSC424CourseProject/client/src/components/ProtectedRoutes.js"],"names":["React","useState","Redirect","Route","ProtectedRoute","component","Component","rest","loggedIn","setloggedIn","fetch","method","origin","credentials","then","res","json","data","user","setUser","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAoC;AAAA;;AAEvD,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;AAEAS,EAAAA,KAAK,CAAC,uCAAD,EAA0C;AAE3CC,IAAAA,MAAM,EAAC,KAFoC;AAG3CC,IAAAA,MAAM,EAAE,qBAHmC;AAI3CC,IAAAA,WAAW,EAAE;AAJ8B,GAA1C,CAAL,CAOKC,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACV,QAAGA,IAAI,CAACC,IAAR,EAAa;AACVT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAU,MAAAA,OAAO,CAACF,IAAI,CAACC,IAAN,CAAP;AACF,KAHD,MAGK;AACHT,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACJ,GAfL;AAiBA,sBAEI,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,MAAM,EACnBa,KAAK,IAAG;AACJ,UAAGZ,QAAH,EAAY;AACT,4BAAO,QAAC,SAAD,OAAcD,IAAd;AAAA,aAAuBa;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACF,OAFD,MAGI;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACR;AARD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH,CAlCD;;GAAMhB,c;;KAAAA,c;AAmCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nconst ProtectedRoute = ({component: Component, ...rest}) =>{\n\n    const [loggedIn,setloggedIn] = useState(false)\n\n    fetch('http://localhost:4000/checkIfloggedIn', {\n      \n        method:'GET',\n        origin: 'http:localhost:4000',\n        credentials: 'include'\n      \n      })\n        .then(res => res.json())\n        .then(data => {\n            if(data.user){\n               setloggedIn(true)\n               setUser(data.user)\n            }else{\n              setloggedIn(false)\n            }\n        } )\n\n    return(\n\n        <Route {...rest} render= {\n            props =>{  \n                if(loggedIn){\n                   return <Component{...rest}{...props} />\n                }\n                else{\n                    return <Redirect to='/login'/>\n                }\n        }\n         } />\n    )\n}\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}